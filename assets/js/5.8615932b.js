(window.webpackJsonp=window.webpackJsonp||[]).push([[5],{438:function(t,s,a){},512:function(t,s,a){t.exports=a.p+"assets/img/1.c5c813b1.png"},513:function(t,s,a){t.exports=a.p+"assets/img/2.a92a6908.png"},514:function(t,s,a){"use strict";a(438)},541:function(t,s,a){"use strict";a.r(s);a(514);var e=a(15),n=Object(e.a)({},(function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("div",{staticClass:"custom-block tip"},[e("p",{staticClass:"custom-block-title"},[t._v("提示")]),t._v(" "),e("p",[t._v("搬运自博客 "),e("a",{attrs:{href:"https://zxuqian.cn/",target:"_blank",rel:"noopener noreferrer"}},[t._v("峰华前端工程师"),e("OutboundLink")],1),t._v("，搬运到自己博客方便自己查看"),e("br"),t._v("\n原帖地址："),e("a",{attrs:{href:"https://zxuqian.cn/css-flex-box-layout/",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://zxuqian.cn/css-flex-box-layout/"),e("OutboundLink")],1)])]),t._v(" "),e("p",[t._v("在 CSS flexbox 布局出现以前，如果要控制 HTML 元素的布局，要用到很多种奇葩的方式。在水平方向上得用"),e("code",[t._v("float")]),t._v("控制左右对齐，稍一不注意，就会有浮动的元素飞来飞去~。在垂直方向上就更是百家争鸣了：要么手动计算高度然后算出中心点，要么用 "),e("code",[t._v("line-height")]),t._v(" 和 "),e("code",[t._v("height")]),t._v(" 的结合，要么用十之八九不生效的 "),e("code",[t._v("vertical-align")]),t._v(" 属性等等等等。自从 flex-box 出现以后，一切似乎就豁然开朗了，水平垂直各种花式对齐，空间分配由你做主。当然，要用好它，用对它也不是一件容易的事，今天就给你说说 flex-box 布局，看完之后你也能熟练的运用它！（博客中的示例都是真实的 HTML 代码，可以使用 chrome 开发者工具查看属性。(此文为了演示某些 flex 示例，在小屏幕下会有横向滚动条)")]),t._v(" "),e("p",[t._v("2 分钟视频入门版："),e("a",{attrs:{href:"https://www.bilibili.com/video/BV1P7411m7Nu/",target:"_blank",rel:"noopener noreferrer"}},[t._v("2 分钟掌握 CSS Grid 布局"),e("OutboundLink")],1)]),t._v(" "),e("h2",{attrs:{id:"开启-flexbox-布局"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#开启-flexbox-布局"}},[t._v("#")]),t._v(" 开启 Flexbox 布局")]),t._v(" "),e("p",[t._v("假设有下边这么一个 html 结构：")]),t._v(" "),e("div",{staticClass:"language-html extra-class"},[e("pre",{pre:!0,attrs:{class:"language-html"}},[e("code",[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("div")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("class")]),e("span",{pre:!0,attrs:{class:"token attr-value"}},[e("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("flex"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("div")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("class")]),e("span",{pre:!0,attrs:{class:"token attr-value"}},[e("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("flex1"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("Flex 1"),e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("div")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("div")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("class")]),e("span",{pre:!0,attrs:{class:"token attr-value"}},[e("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("flex2"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("Flex 2"),e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("div")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("div")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("class")]),e("span",{pre:!0,attrs:{class:"token attr-value"}},[e("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("flex3"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("Flex 3"),e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("div")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("div")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])])]),e("p",[t._v("一个"),e("code",[t._v("div")]),t._v(" 容器包含了三个 "),e("code",[t._v("div")]),t._v(" 子元素，按照默认的布局方式进行排列。因为 "),e("code",[t._v("div")]),t._v(" 是块级元素，每个 "),e("code",[t._v("div")]),t._v(" 占了整个一行的空间：\n")]),e("div",{staticClass:"flex"},[e("div",{staticClass:"flex1"},[t._v("Flex 1")]),t._v(" "),e("div",{staticClass:"flex2"},[t._v("Flex 2")]),t._v(" "),e("div",{staticClass:"flex3"},[t._v("Flex 3")])]),e("p"),t._v(" "),e("p",[t._v("如果要开启容器的 flex 布局，只需要在 css 里边给 "),e("code",[t._v(".flex")]),t._v(" 设置 "),e("code",[t._v("display: flex")]),t._v(" 属性，同时为了演示效果，我给它加上了 100px 的高度：")]),t._v(" "),e("div",{staticClass:"language-css extra-class"},[e("pre",{pre:!0,attrs:{class:"language-css"}},[e("code",[e("span",{pre:!0,attrs:{class:"token property"}},[t._v("display")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" flex"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token property"}},[t._v("height")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 100px"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),e("div",{staticClass:"flex",staticStyle:{display:"flex"}},[e("div",{staticClass:"flex1"},[t._v("Flex 1")]),t._v(" "),e("div",{staticClass:"flex2"},[t._v("Flex 2")]),t._v(" "),e("div",{staticClass:"flex3"},[t._v("Flex 3")])]),t._v(" "),e("p",[t._v("可以看到里边的三个元素自动变成了一行，因为 flex 默认是按行进行排列的。Flexbox 布局是一维布局方式，要么按行排列，要么按列排列。")]),t._v(" "),e("h2",{attrs:{id:"对齐方式"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#对齐方式"}},[t._v("#")]),t._v(" 对齐方式")]),t._v(" "),e("p",[t._v("Flex 布局有一个隐式的坐标空间，水平方向有一条主轴(main-axis)，垂直方向上有一条交叉轴(cross-axis)：\n")]),e("div",{staticClass:"pageimg",staticStyle:{"text-align":"center"}},[e("img",{attrs:{src:a(512),alt:"图片"}})]),e("p"),t._v(" "),e("h3",{attrs:{id:"justify-content"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#justify-content"}},[t._v("#")]),t._v(" justify-content")]),t._v(" "),e("p",[t._v("控制主轴（即水平方向）对齐方式使用"),e("code",[t._v("justify-content")]),t._v("属性，它有下边几种对齐方式：")]),t._v(" "),e("h4",{attrs:{id:"flex-start"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#flex-start"}},[t._v("#")]),t._v(" flex-start")]),t._v(" "),e("p",[e("code",[t._v("flex-start")]),t._v(" 是默认值，如果是从左到右的文字阅读习惯(LTR)，就是靠左对齐。因为默认的对齐方式，所以跟上边的例子没有什么区别：")]),t._v(" "),e("div",{staticClass:"language-css extra-class"},[e("pre",{pre:!0,attrs:{class:"language-css"}},[e("code",[e("span",{pre:!0,attrs:{class:"token property"}},[t._v("justify-content")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" flex-start"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),e("div",{staticClass:"flex",staticStyle:{display:"flex","justify-content":"flex-start"}},[e("div",{staticClass:"flex1"},[t._v("Flex 1")]),t._v(" "),e("div",{staticClass:"flex2"},[t._v("Flex 2")]),t._v(" "),e("div",{staticClass:"flex3"},[t._v("Flex 3")])]),t._v(" "),e("h4",{attrs:{id:"center"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#center"}},[t._v("#")]),t._v(" center")]),t._v(" "),e("p",[t._v("居中对齐，此时整个 flex 容器被居中到了页面中间：\n")]),e("div",{staticClass:"flex",staticStyle:{display:"flex","justify-content":"center"}},[e("div",{staticClass:"flex1"},[t._v("Flex 1")]),t._v(" "),e("div",{staticClass:"flex2"},[t._v("Flex 2")]),t._v(" "),e("div",{staticClass:"flex3"},[t._v("Flex 3")])]),e("p"),t._v(" "),e("h4",{attrs:{id:"flex-end"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#flex-end"}},[t._v("#")]),t._v(" flex-end")]),t._v(" "),e("p",[t._v("靠右对齐：\n")]),e("div",{staticClass:"flex",staticStyle:{display:"flex","justify-content":"flex-end"}},[e("div",{staticClass:"flex1"},[t._v("Flex 1")]),t._v(" "),e("div",{staticClass:"flex2"},[t._v("Flex 2")]),t._v(" "),e("div",{staticClass:"flex3"},[t._v("Flex 3")])]),e("p"),t._v(" "),e("h4",{attrs:{id:"space-between"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#space-between"}},[t._v("#")]),t._v(" space-between")]),t._v(" "),e("p",[t._v("两端对齐，这种对齐方式是第一个和最后一个元素贴边，中间的元素平分剩余的空间：\n")]),e("div",{staticClass:"flex",staticStyle:{display:"flex","justify-content":"space-between"}},[e("div",{staticClass:"flex1"},[t._v("Flex 1")]),t._v(" "),e("div",{staticClass:"flex2"},[t._v("Flex 2")]),t._v(" "),e("div",{staticClass:"flex3"},[t._v("Flex 3")])]),e("p"),t._v(" "),e("h4",{attrs:{id:"space-evenly"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#space-evenly"}},[t._v("#")]),t._v(" space-evenly")]),t._v(" "),e("p",[t._v("分散对齐，所有的元素都平分空间：\n")]),e("div",{staticClass:"flex",staticStyle:{display:"flex","justify-content":"space-evenly"}},[e("div",{staticClass:"flex1"},[t._v("Flex 1")]),t._v(" "),e("div",{staticClass:"flex2"},[t._v("Flex 2")]),t._v(" "),e("div",{staticClass:"flex3"},[t._v("Flex 3")])]),e("p"),t._v(" "),e("h4",{attrs:{id:"space-around"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#space-around"}},[t._v("#")]),t._v(" space-around")]),t._v(" "),e("p",[t._v("跟"),e("code",[t._v("space-evenly")]),t._v("类似，但是左右两边的留白为平分空间的 1/2.\n")]),e("div",{staticClass:"flex",staticStyle:{display:"flex","justify-content":"space-around"}},[e("div",{staticClass:"flex1"},[t._v("Flex 1")]),t._v(" "),e("div",{staticClass:"flex2"},[t._v("Flex 2")]),t._v(" "),e("div",{staticClass:"flex3"},[t._v("Flex 3")])]),e("p"),t._v(" "),e("h3",{attrs:{id:"align-items"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#align-items"}},[t._v("#")]),t._v(" align-items")]),t._v(" "),e("p",[t._v("控制交叉轴方向（即垂直方向）上的对齐方式使用"),e("code",[t._v("align-items")]),t._v("属性，有下边几种对齐方式：")]),t._v(" "),e("h4",{attrs:{id:"stretch"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#stretch"}},[t._v("#")]),t._v(" stretch")]),t._v(" "),e("p",[e("code",[t._v("stretch")]),t._v(" 是 "),e("code",[t._v("align-items")]),t._v(" 的默认值，它会自动把子元素拉伸成容器的高度，所以之前的例子里子元素在垂直方向上都占满了容器，只要改变容器的"),e("code",[t._v("align-items")]),t._v("的值，它就会变成内容的高度。"),e("code",[t._v("stretch")]),t._v(" 对齐效果如下：\n")]),e("div",{staticClass:"flex",staticStyle:{display:"flex","align-items":"stretch"}},[e("div",{staticClass:"flex1"},[t._v("Flex 1")]),t._v(" "),e("div",{staticClass:"flex2"},[t._v("Flex 2")]),t._v(" "),e("div",{staticClass:"flex3"},[t._v("Flex 3")])]),e("p"),t._v(" "),e("h4",{attrs:{id:"flex-start-2"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#flex-start-2"}},[t._v("#")]),t._v(" flex-start")]),t._v(" "),e("p",[t._v("靠上对齐，在交叉轴开始的最上方，可以看到子元素不再占满容器高度：\n")]),e("div",{staticClass:"flex",staticStyle:{display:"flex","align-items":"flex-start"}},[e("div",{staticClass:"flex1"},[t._v("Flex 1")]),t._v(" "),e("div",{staticClass:"flex2"},[t._v("Flex 2")]),t._v(" "),e("div",{staticClass:"flex3"},[t._v("Flex 3")])]),e("p"),t._v(" "),e("h4",{attrs:{id:"center-2"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#center-2"}},[t._v("#")]),t._v(" center")]),t._v(" "),e("p",[t._v("居中对齐：\n")]),e("div",{staticClass:"flex",staticStyle:{display:"flex","align-items":"center"}},[e("div",{staticClass:"flex1"},[t._v("Flex 1")]),t._v(" "),e("div",{staticClass:"flex2"},[t._v("Flex 2")]),t._v(" "),e("div",{staticClass:"flex3"},[t._v("Flex 3")])]),e("p"),t._v(" "),e("h4",{attrs:{id:"flex-end-2"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#flex-end-2"}},[t._v("#")]),t._v(" flex-end")]),t._v(" "),e("p",[t._v("靠下对齐：\n")]),e("div",{staticClass:"flex",staticStyle:{display:"flex","align-items":"flex-end"}},[e("div",{staticClass:"flex1"},[t._v("Flex 1")]),t._v(" "),e("div",{staticClass:"flex2"},[t._v("Flex 2")]),t._v(" "),e("div",{staticClass:"flex3"},[t._v("Flex 3")])]),e("p"),t._v(" "),e("h4",{attrs:{id:"baseline"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#baseline"}},[t._v("#")]),t._v(" baseline")]),t._v(" "),e("p",[t._v("基线对齐，如果子元素文字尺寸和行高不同，则子元素会按照文字的基线进行对齐：")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v(".flex2 {\n  font-size: 24px;\n}\n")])])]),e("div",{staticClass:"flex",staticStyle:{display:"flex","align-items":"baseline"}},[e("div",{staticClass:"flex1"},[t._v("Flex 1")]),t._v(" "),e("div",{staticClass:"flex2",staticStyle:{"font-size":"24px"}},[t._v("Flex 2")]),t._v(" "),e("div",{staticClass:"flex3"},[t._v("Flex 3")])]),t._v(" "),e("p",[t._v("如果是 "),e("code",[t._v("flex-start")]),t._v(" 对齐方式：\n")]),e("div",{staticClass:"flex",staticStyle:{display:"flex","align-items":"flex-start"}},[e("div",{staticClass:"flex1"},[t._v("Flex 1")]),t._v(" "),e("div",{staticClass:"flex2",staticStyle:{"font-size":"24px"}},[t._v("Flex 2")]),t._v(" "),e("div",{staticClass:"flex3"},[t._v("Flex 3")])]),e("p"),t._v(" "),e("h3",{attrs:{id:"align-content"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#align-content"}},[t._v("#")]),t._v(" align-content")]),t._v(" "),e("p",[t._v("本小节在下边讲到折行时再介绍")]),t._v(" "),e("h2",{attrs:{id:"子元素覆盖对齐方式"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#子元素覆盖对齐方式"}},[t._v("#")]),t._v(" 子元素覆盖对齐方式")]),t._v(" "),e("p",[t._v("子元素可以通过设置 "),e("code",[t._v("align-self")]),t._v(" 来控制自己在交叉轴上的对齐方式，例如把 "),e("code",[t._v(".flex3")]),t._v(" 子元素在垂直方向上靠下对齐：")]),t._v(" "),e("div",{staticClass:"language-css extra-class"},[e("pre",{pre:!0,attrs:{class:"language-css"}},[e("code",[e("span",{pre:!0,attrs:{class:"token selector"}},[t._v(".flex")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v("display")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" flex"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v("align-items")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" flex-start"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token selector"}},[t._v(".flex3")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v("align-self")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" flex-end"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),e("div",{staticClass:"flex",staticStyle:{display:"flex","align-items":"flex-start"}},[e("div",{staticClass:"flex1"},[t._v("Flex 1")]),t._v(" "),e("div",{staticClass:"flex2"},[t._v("Flex 2")]),t._v(" "),e("div",{staticClass:"flex3",staticStyle:{"align-self":"flex-end"}},[t._v("Flex 3")])]),t._v(" "),e("p",[t._v("在水平方向上控制子元素对齐并没有"),e("code",[t._v("justify-self")]),t._v("属性，而是使用"),e("code",[t._v("margin")]),t._v("属性，通过把左或右边距设置为"),e("code",[t._v("auto")]),t._v("来控制水平对齐，比如把 "),e("code",[t._v("flex3")]),t._v(" 放到最右边：")]),t._v(" "),e("div",{staticClass:"language-css extra-class"},[e("pre",{pre:!0,attrs:{class:"language-css"}},[e("code",[e("span",{pre:!0,attrs:{class:"token selector"}},[t._v(".flex3")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v("margin-left")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" auto"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),e("div",{staticClass:"flex",staticStyle:{display:"flex"}},[e("div",{staticClass:"flex1"},[t._v("Flex 1")]),t._v(" "),e("div",{staticClass:"flex2"},[t._v("Flex 2")]),t._v(" "),e("div",{staticClass:"flex3",staticStyle:{"margin-left":"auto"}},[t._v("Flex 3")])]),t._v(" "),e("h2",{attrs:{id:"排列方式"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#排列方式"}},[t._v("#")]),t._v(" 排列方式")]),t._v(" "),e("p",[t._v("flex 支持按行排布，也支持按列排布。按列排布时，主轴和交叉轴换了方向，但是 align-items 和 justify-content 控制的轴线不变，即 "),e("code",[t._v("align-items")]),t._v(" 还是控制交叉轴，"),e("code",[t._v("justify-content")]),t._v(" 控制主轴：\n")]),e("div",{staticClass:"pageimg",staticStyle:{"text-align":"center"}},[e("img",{attrs:{src:a(513),alt:"图片"}})]),e("p"),t._v(" "),e("p",[t._v("所以说，在水平方向上对齐变成了使用"),e("code",[t._v("align-items")]),t._v("，垂直方向则用"),e("code",[t._v("justify-content")]),t._v("。"),e("br"),t._v("\n要使 flex 按列排布，只需要设置：")]),t._v(" "),e("div",{staticClass:"language-css extra-class"},[e("pre",{pre:!0,attrs:{class:"language-css"}},[e("code",[e("span",{pre:!0,attrs:{class:"token property"}},[t._v("flex-direction")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" column"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),e("p",[t._v("来看几个例子：")]),t._v(" "),e("p",[e("strong",[t._v("水平居中对齐")])]),t._v(" "),e("div",{staticClass:"language-css extra-class"},[e("pre",{pre:!0,attrs:{class:"language-css"}},[e("code",[e("span",{pre:!0,attrs:{class:"token selector"}},[t._v(".flex")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v("display")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" flex"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v("flex-direction")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" column"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v("align-items")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" center"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),e("div",{staticClass:"flex",staticStyle:{display:"flex","flex-direction":"column","align-items":"center"}},[e("div",{staticClass:"flex1"},[t._v("Flex 1")]),t._v(" "),e("div",{staticClass:"flex2"},[t._v("Flex 2")]),t._v(" "),e("div",{staticClass:"flex3"},[t._v("Flex 3")])]),t._v(" "),e("p",[e("strong",[t._v("垂直居中对齐")])]),t._v(" "),e("div",{staticClass:"language-css extra-class"},[e("pre",{pre:!0,attrs:{class:"language-css"}},[e("code",[e("span",{pre:!0,attrs:{class:"token selector"}},[t._v(".flex")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v("display")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" flex"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v("flex-direction")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" column"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v("justify-content")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" center"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),e("div",{staticClass:"flex",staticStyle:{display:"flex","flex-direction":"column","justify-content":"center"}},[e("div",{staticClass:"flex1"},[t._v("Flex 1")]),t._v(" "),e("div",{staticClass:"flex2"},[t._v("Flex 2")]),t._v(" "),e("div",{staticClass:"flex3"},[t._v("Flex 3")])]),t._v(" "),e("p",[t._v("另外 flex 布局也可以支持反向按行和列布局，相当于按容器中心线进行 180 度翻转："),e("br"),t._v(" "),e("strong",[t._v("row-reverse")])]),t._v(" "),e("div",{staticClass:"language-css extra-class"},[e("pre",{pre:!0,attrs:{class:"language-css"}},[e("code",[e("span",{pre:!0,attrs:{class:"token selector"}},[t._v(".flex")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v("display")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" flex"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v("flex-direction")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" row-reverse"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),e("div",{staticClass:"flex",staticStyle:{display:"flex","flex-direction":"row-reverse"}},[e("div",{staticClass:"flex1"},[t._v("Flex 1")]),t._v(" "),e("div",{staticClass:"flex2"},[t._v("Flex 2")]),t._v(" "),e("div",{staticClass:"flex3"},[t._v("Flex 3")])]),t._v(" "),e("p",[e("strong",[t._v("column-reverse")]),t._v("\n列模式下会垂直翻转：")]),t._v(" "),e("div",{staticClass:"language-css extra-class"},[e("pre",{pre:!0,attrs:{class:"language-css"}},[e("code",[e("span",{pre:!0,attrs:{class:"token selector"}},[t._v(".flex")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v("display")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" flex"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v("flex-direction")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" column-reverse"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),e("div",{staticClass:"flex",staticStyle:{display:"flex","flex-direction":"column-reverse"}},[e("div",{staticClass:"flex1"},[t._v("Flex 1")]),t._v(" "),e("div",{staticClass:"flex2"},[t._v("Flex 2")]),t._v(" "),e("div",{staticClass:"flex3"},[t._v("Flex 3")])]),t._v(" "),e("h2",{attrs:{id:"空间占比"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#空间占比"}},[t._v("#")]),t._v(" 空间占比")]),t._v(" "),e("p",[t._v("子元素可以通过设置"),e("code",[t._v("flex")]),t._v("属性来调整空间的占比，例如让 "),e("code",[t._v("flex2")]),t._v(" 在水平方向上占据其他子元素的 2 倍大小，可以设置：")]),t._v(" "),e("div",{staticClass:"language-css extra-class"},[e("pre",{pre:!0,attrs:{class:"language-css"}},[e("code",[e("span",{pre:!0,attrs:{class:"token selector"}},[t._v(".flex1,\n.flex3")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v("flex")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 1"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token selector"}},[t._v(".flex2")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v("flex")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 2"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),e("div",{staticClass:"flex",staticStyle:{display:"flex"}},[e("div",{staticClass:"flex1",staticStyle:{flex:"1"}},[t._v("Flex 1")]),t._v(" "),e("div",{staticClass:"flex2",staticStyle:{flex:"2"}},[t._v("Flex 2")]),t._v(" "),e("div",{staticClass:"flex3",staticStyle:{flex:"1"}},[t._v("Flex 3")])]),t._v(" "),e("h2",{attrs:{id:"flex-basis"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#flex-basis"}},[t._v("#")]),t._v(" Flex-basis")]),t._v(" "),e("p",[t._v("在介绍 flex-basis 之前，先讲一个概念 "),e("code",[t._v("main size")]),t._v("，即主轴方向的尺寸，那么，在行排布模式下，也就是水平方向的尺寸，其实就是子元素的宽度，而在列模式下，它是子元素的高度，相对应的也有"),e("code",[t._v("cross size")]),t._v("，即行模式下是子元素的高度，列模式下是宽度。\n而"),e("code",[t._v("flex-basis")]),t._v("是用来设置"),e("code",[t._v("main size")]),t._v("的，它的优先级会高于"),e("code",[t._v("width")]),t._v("。"),e("strong",[t._v("它的默认值是"),e("code",[t._v("auto")])]),t._v("，即在行模式下，如果子元素设置了宽度，它就取自这个宽度值，没有设置的话，就是内容的宽度。使用 "),e("code",[t._v("flex-basis")]),t._v("，可以同时管理行模式下的宽度和列模式下的高度。")]),t._v(" "),e("p",[t._v("来看一个例子，把之前的子元素改成固定宽度，比如 "),e("code",[t._v("200px")]),t._v("：")]),t._v(" "),e("div",{staticClass:"language-css extra-class"},[e("pre",{pre:!0,attrs:{class:"language-css"}},[e("code",[e("span",{pre:!0,attrs:{class:"token selector"}},[t._v(".flex > *")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v("flex-basis")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 200px"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),e("p",[t._v("这样每个子元素宽度变为了 200px：\n")]),e("div",{staticClass:"flex",staticStyle:{display:"flex"}},[e("div",{staticClass:"flex1",staticStyle:{"flex-basis":"200px"}},[t._v("Flex 1")]),t._v(" "),e("div",{staticClass:"flex2",staticStyle:{"flex-basis":"200px"}},[t._v("Flex 2")]),t._v(" "),e("div",{staticClass:"flex3",staticStyle:{"flex-basis":"200px"}},[t._v("Flex 3")])]),e("p"),t._v(" "),e("p",[t._v("如果再添加 "),e("code",[t._v("width")]),t._v(" 属性，发现并不会生效：")]),t._v(" "),e("div",{staticClass:"language-css extra-class"},[e("pre",{pre:!0,attrs:{class:"language-css"}},[e("code",[e("span",{pre:!0,attrs:{class:"token selector"}},[t._v(".flex > *")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v("flex-basis")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 200px"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v("width")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 250px"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),e("div",{staticClass:"flex",staticStyle:{display:"flex"}},[e("div",{staticClass:"flex1",staticStyle:{"flex-basis":"200px",width:"250px"}},[t._v("Flex 1")]),t._v(" "),e("div",{staticClass:"flex2",staticStyle:{"flex-basis":"200px",width:"250px"}},[t._v("Flex 2")]),t._v(" "),e("div",{staticClass:"flex3",staticStyle:{"flex-basis":"200px",width:"250px"}},[t._v("Flex 3")])]),t._v(" "),e("p",[t._v("但是，可以通过设置 "),e("code",[t._v("min-width")]),t._v("来强制设置最小宽度：")]),t._v(" "),e("div",{staticClass:"language-css extra-class"},[e("pre",{pre:!0,attrs:{class:"language-css"}},[e("code",[e("span",{pre:!0,attrs:{class:"token selector"}},[t._v(".flex > *")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v("flex-basis")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 200px"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v("min-width")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 250px"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),e("div",{staticClass:"flex",staticStyle:{display:"flex"}},[e("div",{staticClass:"flex1",staticStyle:{"flex-basis":"200px","min-width":"250px"}},[t._v("Flex 1")]),t._v(" "),e("div",{staticClass:"flex2",staticStyle:{"flex-basis":"200px","min-width":"250px"}},[t._v("Flex 2")]),t._v(" "),e("div",{staticClass:"flex3",staticStyle:{"flex-basis":"200px","min-width":"250px"}},[t._v("Flex 3")])]),t._v(" "),e("p",[t._v("同理的，在列模式下，"),e("code",[t._v("flex-basis")]),t._v("变成了高度，因为容器高度为 "),e("code",[t._v("100px")]),t._v("，这里把子元素高度设置成了 "),e("code",[t._v("30px")]),t._v(" 总计 "),e("code",[t._v("90px")]),t._v(" 来效果：")]),t._v(" "),e("div",{staticClass:"language-css extra-class"},[e("pre",{pre:!0,attrs:{class:"language-css"}},[e("code",[e("span",{pre:!0,attrs:{class:"token selector"}},[t._v(".flex")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v("flex-direction")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" column"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token selector"}},[t._v(".flex > *")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v("flex-basis")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 30px"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),e("div",{staticClass:"flex",staticStyle:{display:"flex","flex-direction":"column"}},[e("div",{staticClass:"flex1",staticStyle:{"flex-basis":"30px"}},[t._v("Flex 1")]),t._v(" "),e("div",{staticClass:"flex2",staticStyle:{"flex-basis":"30px"}},[t._v("Flex 2")]),t._v(" "),e("div",{staticClass:"flex3",staticStyle:{"flex-basis":"30px"}},[t._v("Flex 3")])]),t._v(" "),e("p",[t._v("同样的，也可以用"),e("code",[t._v("min-height")]),t._v("来控制最小高度。")]),t._v(" "),e("h2",{attrs:{id:"缩放"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#缩放"}},[t._v("#")]),t._v(" 缩放")]),t._v(" "),e("p",[t._v("（后续例子都假设是行模式）之前的小节简单说了一下 flex 子元素空间的占比，这里把缩放单独拿出来是为了说明：除了调整 flex 子元素的增长之外，也可以调整收缩，以及"),e("code",[t._v("flex")]),t._v("属性背后的原理（下一小节）。")]),t._v(" "),e("h3",{attrs:{id:"flex-grow"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#flex-grow"}},[t._v("#")]),t._v(" flex-grow")]),t._v(" "),e("p",[t._v("先看一下增长，"),e("code",[t._v("flex-grow")]),t._v("，这个属性是说 flex 容器在有剩余空间的时候，子元素占据剩余空间的占比。例如，给"),e("code",[t._v(".flex2")]),t._v("子元素设置：")]),t._v(" "),e("div",{staticClass:"language-css extra-class"},[e("pre",{pre:!0,attrs:{class:"language-css"}},[e("code",[e("span",{pre:!0,attrs:{class:"token selector"}},[t._v(".flex2")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v("flex-grow")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 1"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),e("p",[t._v("其它的元素保持默认的宽度（即内容的宽度，flex-basis 为 auto)，那么 "),e("code",[t._v(".flex2")]),t._v(" 就会自动增长并占据整个剩余空间：\n")]),e("div",{staticClass:"flex",staticStyle:{display:"flex"}},[e("div",{staticClass:"flex1"},[t._v("Flex 1")]),t._v(" "),e("div",{staticClass:"flex2",staticStyle:{"flex-grow":"1"}},[t._v("Flex 2")]),t._v(" "),e("div",{staticClass:"flex3"},[t._v("Flex 3")])]),e("p"),t._v(" "),e("p",[t._v("如果把三个元素全部设置成 1，那么所有元素都会自动增长，并各自占据 1/3 的空间：\n")]),e("div",{staticClass:"flex",staticStyle:{display:"flex"}},[e("div",{staticClass:"flex1",staticStyle:{"flex-grow":"1"}},[t._v("Flex 1")]),t._v(" "),e("div",{staticClass:"flex2",staticStyle:{"flex-grow":"1"}},[t._v("Flex 2")]),t._v(" "),e("div",{staticClass:"flex3",staticStyle:{"flex-grow":"1"}},[t._v("Flex 3")])]),e("p"),t._v(" "),e("p",[t._v("使用 "),e("code",[t._v("flex-grow")]),t._v(" 就能够自由的调整元素的空间占比了，非常适合一些浮动的布局。")]),t._v(" "),e("h3",{attrs:{id:"flex-shrink"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#flex-shrink"}},[t._v("#")]),t._v(" flex-shrink")]),t._v(" "),e("p",[t._v("子元素的收缩是说：当它们的宽度超过 flex 容器之后，该如何进行收缩。通过 "),e("code",[t._v("flex-shrink")]),t._v(" 来设置一个数值，数值越大，收缩程度也越大，比如"),e("code",[t._v("flex-shrink: 2")]),t._v("的元素会比"),e("code",[t._v("flex-shrink:1")]),t._v("收缩的值大 2 倍：")]),t._v(" "),e("div",{staticClass:"language-css extra-class"},[e("pre",{pre:!0,attrs:{class:"language-css"}},[e("code",[e("span",{pre:!0,attrs:{class:"token selector"}},[t._v(".flex1,\n.flex3")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v("flex-basis")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 600px"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v("flex-shrink")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 1"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token selector"}},[t._v(".flex2")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v("flex-basis")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 600px"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v("flex-shrink")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 2"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),e("p",[t._v("这里为了方便演示，我把所有的 flex 子元素的 main size (宽度) 都设置成了 600px。在我的显示器下，flex 容器的宽度是 728px，三个子元素总和 1800px，显然超出了容器的宽度，那么根据上边定义的收缩规则，"),e("code",[t._v(".flex2")]),t._v(" 将收缩 2 倍于 "),e("code",[t._v(".flex")]),t._v(" 和 "),e("code",[t._v(".flex3")]),t._v(" 收缩的空间。下边的例子中，"),e("code",[t._v(".flex1")]),t._v(" 和 "),e("code",[t._v(".flex3")]),t._v(" 的宽度变成了 "),e("code",[t._v("332px")]),t._v("，相比于 "),e("code",[t._v("600px")]),t._v(" 收缩了 "),e("code",[t._v("268px")]),t._v("，那么 "),e("code",[t._v(".flex2")]),t._v(" 就要收缩 "),e("code",[t._v("536px (268px * 2)")]),t._v(" 的宽度，那么它最后就会剩下 "),e("code",[t._v("64px (600px - 536px)")]),t._v(" 的宽度：\n")]),e("div",{staticClass:"flex",staticStyle:{display:"flex"}},[e("div",{staticClass:"flex1",staticStyle:{"flex-basis":"600px","flex-shrink":"1"}},[t._v("Flex 1")]),t._v(" "),e("div",{staticClass:"flex2",staticStyle:{"flex-basis":"600px","flex-shrink":"2"}},[t._v("Flex 2")]),t._v(" "),e("div",{staticClass:"flex3",staticStyle:{"flex-basis":"600px","flex-shrink":"1"}},[t._v("Flex 3")])]),e("p"),t._v(" "),e("h2",{attrs:{id:"再说-flex-属性"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#再说-flex-属性"}},[t._v("#")]),t._v(" 再说 flex 属性")]),t._v(" "),e("p",[t._v("说完"),e("code",[t._v("flex-grow")]),t._v("、"),e("code",[t._v("flex-shrink")]),t._v(" 和 "),e("code",[t._v("flex-basis")]),t._v(" 之后，再来看一下这个 "),e("code",[t._v("flex")]),t._v(" 属性，它其实是前边三个属性的缩写，默认值是 "),e("code",[t._v("0 1 auto")]),t._v("，即不增长，但收缩，收缩比例为 1，flex-basis 为 auto，即取自用户定义的宽度或内容的宽度。")]),t._v(" "),e("p",[t._v("flex 的值可以是下边几种：")]),t._v(" "),e("ul",[e("li",[t._v("指定一个数字 - 例如"),e("code",[t._v("flex: 1")]),t._v("，就等同于是"),e("code",[t._v("flex: 1 1 0")]),t._v("，即自动缩放，比例为 1，flex-basis 为 0。")]),t._v(" "),e("li",[t._v("auto - 等同于"),e("code",[t._v("flex: 1 1 auto")]),t._v("。")]),t._v(" "),e("li",[t._v("指定两个数字 - 第一个为"),e("code",[t._v("flex-grow")]),t._v("，第二个，如果是数字则认为是 "),e("code",[t._v("flex-shrink")]),t._v("，如果是宽度，则是"),e("code",[t._v("flex-basis")]),t._v("。")]),t._v(" "),e("li",[t._v("指定三个值 - 分别为"),e("code",[t._v("flex-grow")]),t._v("，"),e("code",[t._v("flex-shrink")]),t._v(" 和 "),e("code",[t._v("flex-basis")]),t._v("。")])]),t._v(" "),e("p",[t._v("所以说，通过"),e("code",[t._v("flex")]),t._v("属性可以方便的同时设置"),e("code",[t._v("flex-grow")]),t._v("、"),e("code",[t._v("flex-shrink")]),t._v(" 和 "),e("code",[t._v("flex-basis")]),t._v(" 这三个值。")]),t._v(" "),e("h2",{attrs:{id:"折行"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#折行"}},[t._v("#")]),t._v(" 折行")]),t._v(" "),e("p",[t._v("如果子元素有固定宽度，并且超出了容器的宽度，还不允许收缩的话，那么可以使用"),e("code",[t._v("flex-wrap")]),t._v("属性来让元素进行折行排列，使得每行的元素都不超过容器的宽度。"),e("strong",[t._v("这里跟 css grid 布局的主要区别是，它无法控制单独控制行、列的占比，比如跨行、夸列，也不能自由定位元素到特定的位置")]),t._v("。下边的示例新增了 2 个元素，一共 5 个，每个元素的 main size 为 300px，然后超出宽度后折行：")]),t._v(" "),e("div",{staticClass:"language-css extra-class"},[e("pre",{pre:!0,attrs:{class:"language-css"}},[e("code",[e("span",{pre:!0,attrs:{class:"token selector"}},[t._v(".flex")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v("flex-wrap")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" wrap"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token selector"}},[t._v(".flex > *")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v("flex-shrink")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 0"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v("flex-basis")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 300px"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),e("div",{staticClass:"flex",staticStyle:{display:"flex","flex-wrap":"wrap"}},[e("div",{staticClass:"flex1",staticStyle:{"flex-shrink":"0","flex-basis":"300px"}},[t._v("Flex 1")]),t._v(" "),e("div",{staticClass:"flex2",staticStyle:{"flex-shrink":"0","flex-basis":"300px"}},[t._v("Flex 2")]),t._v(" "),e("div",{staticClass:"flex3",staticStyle:{"flex-shrink":"0","flex-basis":"300px"}},[t._v("Flex 3")]),t._v(" "),e("div",{staticClass:"flex4",staticStyle:{"flex-shrink":"0","flex-basis":"300px"}},[t._v("Flex 4")]),t._v(" "),e("div",{staticClass:"flex5",staticStyle:{"flex-shrink":"0","flex-basis":"300px"}},[t._v("Flex 5")])]),t._v(" "),e("h3",{attrs:{id:"align-content-2"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#align-content-2"}},[t._v("#")]),t._v(" align-content")]),t._v(" "),e("p",[t._v("如果 flex 容器开启了折行，那么两行及以上的内容可以通过"),e("code",[t._v("align-content")]),t._v("属性来控制各行之间在交叉轴上的排列规则，它的取值和 "),e("code",[t._v("justify-content")]),t._v("基本相同，这里演示其中几个，还是使用之前三个元素的 flex 容器，每个容器宽度为 300px，超出后换行：")]),t._v(" "),e("div",{staticClass:"language-css extra-class"},[e("pre",{pre:!0,attrs:{class:"language-css"}},[e("code",[e("span",{pre:!0,attrs:{class:"token selector"}},[t._v(".flex")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v("display")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" flex"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v("flex-wrap")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" wrap"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token selector"}},[t._v(".flex > *")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v("flex-basis")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 300px"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),e("h4",{attrs:{id:"center-3"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#center-3"}},[t._v("#")]),t._v(" center")]),t._v(" "),e("p",[t._v("垂直居中：\n")]),e("div",{staticClass:"flex",staticStyle:{display:"flex","flex-wrap":"wrap","align-content":"center"}},[e("div",{staticClass:"flex1",staticStyle:{"flex-basis":"300px"}},[t._v("Flex 1")]),t._v(" "),e("div",{staticClass:"flex2",staticStyle:{"flex-basis":"300px"}},[t._v("Flex 2")]),t._v(" "),e("div",{staticClass:"flex3",staticStyle:{"flex-basis":"300px"}},[t._v("Flex 3")])]),e("p"),t._v(" "),e("h4",{attrs:{id:"space-between-2"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#space-between-2"}},[t._v("#")]),t._v(" space-between")]),t._v(" "),e("p",[t._v("两端对齐：\n")]),e("div",{staticClass:"flex",staticStyle:{display:"flex","flex-wrap":"wrap","align-content":"space-between"}},[e("div",{staticClass:"flex1",staticStyle:{"flex-basis":"300px"}},[t._v("Flex 1")]),t._v(" "),e("div",{staticClass:"flex2",staticStyle:{"flex-basis":"300px"}},[t._v("Flex 2")]),t._v(" "),e("div",{staticClass:"flex3",staticStyle:{"flex-basis":"300px"}},[t._v("Flex 3")])]),e("p"),t._v(" "),e("h2",{attrs:{id:"嵌套的-flex-容器的问题"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#嵌套的-flex-容器的问题"}},[t._v("#")]),t._v(" 嵌套的 flex 容器的问题")]),t._v(" "),e("p",[t._v("如果 HTML 结构复杂，有嵌套的 flex 容器，很有可能会遇到嵌套的 flex 容器并不能自动收缩的问题，即使设置了"),e("code",[t._v("flex-shrink")]),t._v("。比如有下边一个 html 结构：")]),t._v(" "),e("div",{staticClass:"language-html extra-class"},[e("pre",{pre:!0,attrs:{class:"language-html"}},[e("code",[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("div")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("class")]),e("span",{pre:!0,attrs:{class:"token attr-value"}},[e("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("flex"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("div")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("class")]),e("span",{pre:!0,attrs:{class:"token attr-value"}},[e("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("flex1"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("Flex 1"),e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("div")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("div")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("class")]),e("span",{pre:!0,attrs:{class:"token attr-value"}},[e("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("flex2"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("Flex 2"),e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("div")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("div")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("class")]),e("span",{pre:!0,attrs:{class:"token attr-value"}},[e("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("flex3"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("Flex 3"),e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("div")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("div")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("class")]),e("span",{pre:!0,attrs:{class:"token attr-value"}},[e("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("flex4"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("p")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n      这是一段很长很长很长很长很长很长很长很长很长很长很长很长长很长很长很长很长很长长很长很长很长很长很长的文本\n    "),e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("p")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("div")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("div")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])])]),e("p",[t._v("这里给之前的 flex 容器添加了一个新的子元素"),e("code",[t._v(".flex4")]),t._v("，这 4 个子元素都设置成"),e("code",[t._v("flex: 1")]),t._v("来平分空间，但是 "),e("code",[t._v(".flex4")]),t._v(" 自己本身也是一个"),e("code",[t._v("flex")]),t._v("布局的容器，里边有一长串文本，我想让它超长之后自动显示省略号，它的 CSS 代码：")]),t._v(" "),e("div",{staticClass:"language-css extra-class"},[e("pre",{pre:!0,attrs:{class:"language-css"}},[e("code",[e("span",{pre:!0,attrs:{class:"token selector"}},[t._v(".flex")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v("display")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" flex"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token selector"}},[t._v(".flex > *")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v("flex")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 1"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token selector"}},[t._v(".flex4")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v("display")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" flex"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v("flex")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 1"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token selector"}},[t._v(".flex4 > p")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v("white-space")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" nowrap"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v("overflow")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" hidden"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v("text-overflow")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" ellipsis"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),e("div",{staticClass:"flex",staticStyle:{display:"flex"}},[e("div",{staticClass:"flex1",staticStyle:{flex:"1"}},[t._v("Flex 1")]),t._v(" "),e("div",{staticClass:"flex2",staticStyle:{flex:"1"}},[t._v("Flex 2")]),t._v(" "),e("div",{staticClass:"flex3",staticStyle:{flex:"1"}},[t._v("Flex 3")]),t._v(" "),e("div",{staticClass:"flex4",staticStyle:{flex:"1",display:"flex"}},[e("p",{staticStyle:{"white-space":"nowrap",overflow:"hidden","text-overflow":"ellipsis"}},[t._v("\n        这是一段长长长长长长长长长长长长长长长长长长长长长长长长长长长长长长长长长的文本\n        ")])])]),t._v(" "),e("p",[t._v("可以看到，最后本应该占 1/4 空间的"),e("code",[t._v(".flex4")]),t._v("，因为文本不能换行，直接把 flex 容器撑开了，并且把其他的三个子元素挤成了最小空间，它本应该把文字截短并显示省略号，这是为什么呢？原来，flex 容器的 "),e("code",[t._v("min-width")]),t._v(" 属性值为 auto，是由浏览器自行计算的，在这里它取了"),e("code",[t._v("<p>")]),t._v("元素的宽度，使得宽度成为了一整行 "),e("code",[t._v("<p>")]),t._v(" 的宽度。那么要解决这个问题，可以把"),e("code",[t._v(".flex4")]),t._v(" 这个嵌套 flex 容器的 "),e("code",[t._v("min-width")]),t._v(" 改为"),e("code",[t._v("0")]),t._v("，即最小宽度是"),e("code",[t._v("0")]),t._v("，那么就可以正常收缩了：")]),t._v(" "),e("div",{staticClass:"language-css extra-class"},[e("pre",{pre:!0,attrs:{class:"language-css"}},[e("code",[e("span",{pre:!0,attrs:{class:"token selector"}},[t._v(".flex4")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v("display")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" flex"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v("flex")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 1"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v("min-width")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 0"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),e("div",{staticClass:"flex",staticStyle:{display:"flex"}},[e("div",{staticClass:"flex1",staticStyle:{flex:"1"}},[t._v("Flex 1")]),t._v(" "),e("div",{staticClass:"flex2",staticStyle:{flex:"1"}},[t._v("Flex 2")]),t._v(" "),e("div",{staticClass:"flex3",staticStyle:{flex:"1"}},[t._v("Flex 3")]),t._v(" "),e("div",{staticClass:"flex4",staticStyle:{flex:"1",display:"flex","min-width":"0"}},[e("p",{staticStyle:{"white-space":"nowrap",overflow:"hidden","text-overflow":"ellipsis"}},[t._v("\n        这是一段很长很长很长很长很长很长很长很长很长很长很长很长长很长很长很长很长很长长很长很长很长很长很长的文本\n        ")])])]),t._v(" "),e("h2",{attrs:{id:"总结"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#总结"}},[t._v("#")]),t._v(" 总结")]),t._v(" "),e("p",[t._v("到这里，整个 flex 布局就介绍完了，还是有不少东西的，但不难。相信通过实例你一定可以掌握它的用法，下边总结一下要点：")]),t._v(" "),e("ul",[e("li",[t._v("开启 flex 布局使用"),e("code",[t._v("display: flex")]),t._v("属性。")]),t._v(" "),e("li",[t._v("flex 布局有主轴和交叉轴，分别使用"),e("code",[t._v("justify-content")]),t._v("和"),e("code",[t._v("align-items")]),t._v("控制对齐方式。")]),t._v(" "),e("li",[t._v("支持按行或列进行排列，使用"),e("code",[t._v("flex-direction")]),t._v("，另外也支持"),e("code",[t._v("row-reverse")]),t._v("和"),e("code",[t._v("column-reverse")]),t._v("反向排列。")]),t._v(" "),e("li",[t._v("子元素可以通过"),e("code",[t._v("flex")]),t._v("简写形式，或者"),e("code",[t._v("flex-grow")]),t._v("，"),e("code",[t._v("flex-shrink")]),t._v("，"),e("code",[t._v("flex-basis")]),t._v(" 来调整元素的空间占比和缩放。")]),t._v(" "),e("li",[t._v("通过"),e("code",[t._v("flex-wrap")]),t._v("可以设置 flex 子元素折行显示。")]),t._v(" "),e("li",[t._v("嵌套"),e("code",[t._v("flex")]),t._v("容器的缩放问题。")])]),t._v(" "),e("p",[t._v("你学会了吗？如果有问题，欢迎通过下方链接参与讨论。")]),t._v(" "),e("p",[e("a",{attrs:{href:"https://www.bilibili.com/video/BV1P7411m7Nu/",target:"_blank",rel:"noopener noreferrer"}},[t._v(">> 在 B 站参与讨论"),e("OutboundLink")],1)])])}),[],!1,null,null,null);s.default=n.exports}}]);