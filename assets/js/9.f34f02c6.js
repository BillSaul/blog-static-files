(window.webpackJsonp=window.webpackJsonp||[]).push([[9],{476:function(t,a,e){t.exports=e.p+"assets/img/3.7b57a3ab.png"},477:function(t,a,e){t.exports=e.p+"assets/img/4.84136272.png"},528:function(t,a,e){"use strict";e.r(a);var s=e(24),n=Object(s.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"custom-block-title"},[t._v("摘自维基百科")]),t._v(" "),s("p",[t._v("GNU Privacy Guard（GnuPG或GPG）是一个密码学软件，用于加密、签名通信内容及管理非对称密码学的密钥。GnuPG是自由软件，遵循IETF订定的OpenPGP技术标准设计，并与PGP保持兼容。")])]),t._v(" "),s("p",[t._v("如果用 GitHub 客户端或者在 GitHub 网页上操作 git 都会在 commits 中留下 "),s("code",[t._v("Verified")]),t._v(" 的标记，\n这表示该 commit 是在 GitHub 上创建的，使用 GitHub 的 key 对这个提交进行了签名。\n但 GitHub 客户端或者 GitHub 网页并不是签名 commit 的唯一方法，我们也可以通过 GnuPG (GPG) 来签名我们的 commit。"),s("br")]),s("div",{staticClass:"pageimg",staticStyle:{"text-align":"center"}},[s("img",{attrs:{src:e(476),alt:"图片"}})]),s("p"),t._v(" "),s("h2",{attrs:{id:"_1-安装gpg"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-安装gpg"}},[t._v("#")]),t._v(" 1. 安装GPG")]),t._v(" "),s("p",[s("strong",[t._v("Linux")]),t._v(" 一般都是自带GPG，可以直接使用"),s("br"),t._v("\n如果没有可使用如下命令：")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("# Debian、Ubuntu 等\n    apt-get install gnupg\n\n# Redhat、Centos、Fedora 等\n    yum install gnupg\n")])])]),s("p",[s("strong",[t._v("Windows")]),t._v(" 中MinGW带有GPG，而 Windows 版的 Git 基于 MinGW 的，所以直接使用git bash就行")]),t._v(" "),s("h2",{attrs:{id:"_2-生成gpg密钥"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-生成gpg密钥"}},[t._v("#")]),t._v(" 2. 生成GPG密钥")]),t._v(" "),s("p",[t._v("git bash中使用命令："),s("code",[t._v("gpg --gen-key")])]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("$ gpg --gen-key\ngpg (GnuPG) 2.2.15; Copyright (C) 2019 Free Software Foundation, Inc.\nThis is free software: you are free to change and redistribute it.\nThere is NO WARRANTY, to the extent permitted by law.\n\n注意：使用 “gpg --full-generate-key” 以获得一个功能完整的密钥产生对话框。\n\nGnuPG 需要构建用户标识以辨认您的密钥。\n\n真实姓名： name\n电子邮件地址： name@qq.com\n\n")])])]),s("p",[t._v("然后输入 "),s("code",[t._v("O")]),t._v(" 确定")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("更改姓名（N）、注释（C）、电子邮件地址（E）或确定（O）/退出（Q）？ o\n")])])]),s("p",[t._v("然后会提示你")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("我们需要生成大量的随机字节。在质数生成期间做些其他操作（敲打键盘、移动鼠标、读写硬盘之类的）将会是一个不错的主意；\n这会让随机数发生器有更好的机会获得足够的熵\n")])])]),s("p",[t._v("之后会弹出对话框让你输入密码\n密钥生成完成之后，记下密钥 ID "),s("code",[t._v("43948FGB5418156F")])]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("gpg: 密钥 43948FGB5418156F 被标记为绝对信任\ngpg: 吊销证书已被存储为‘/home/name/.gnupg/openpgp-revocs.d/DC4E79EFEE5E224A20E9013A43948FGB5418156F.rev’\n公钥和私钥已经生成并被签名。\n\npub   rsa2048 2020-11-6 [SC] [有效至：2022-11-6]\n      DC4E79EFEE5E224A20E9013A43948FGB5418156F\nuid                      name <name@qq.com>\nsub   rsa2048 2020-11-6 [E] [有效至：2022-11-6]\n")])])]),s("h2",{attrs:{id:"_3-git设置"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-git设置"}},[t._v("#")]),t._v(" 3. Git设置")]),t._v(" "),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"custom-block-title"},[t._v("提示")]),t._v(" "),s("p",[t._v("想全局设置，在命令中加上 "),s("code",[t._v("--global")]),t._v(" 参数")])]),t._v(" "),s("p",[t._v("让 Git 使用我们的密钥来对 commit 进行签名")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("git config user.signingkey <密钥ID>\n")])])]),s("p",[t._v("设置 Git 使用该密钥加密 commit")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("git config commit.gpgsign true\n")])])]),s("p",[t._v("顺便设置 Git 全局使用该密钥加密 tag")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("git config tag.forcesignannotated true\n")])])]),s("h2",{attrs:{id:"_4-获得公钥"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-获得公钥"}},[t._v("#")]),t._v(" 4. 获得公钥")]),t._v(" "),s("p",[t._v("公钥文件是以二进制的形式储存的，我们使用 "),s("code",[t._v("--armor")]),t._v(" 参数将它转换成 ASCII 码的形式输出")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("gpg --armor --export <密钥ID>\n")])])]),s("p",[t._v("复制输出的公钥")]),t._v(" "),s("h2",{attrs:{id:"_5-上传公钥到github"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5-上传公钥到github"}},[t._v("#")]),t._v(" 5. 上传公钥到GitHub")]),t._v(" "),s("p",[t._v("在 GitHub 的设置页面的 SSH and GPG keys，点击 New GPG key添加就行"),s("br"),t._v("\n以后你在这台计算机推送到 GitHub 的 commit 就都带有 GPG 签名了\n")]),s("div",{staticClass:"pageimg",staticStyle:{"text-align":"center"}},[s("img",{attrs:{src:e(477),alt:"图片"}})]),s("p"),t._v(" "),s("h2",{attrs:{id:"_6-额外的命令补充"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_6-额外的命令补充"}},[t._v("#")]),t._v(" 6. 额外的命令补充")]),t._v(" "),s("ul",[s("li",[t._v("列出密钥："),s("code",[t._v("gpg --list-keys")])]),t._v(" "),s("li",[t._v("删除私钥："),s("code",[t._v("gpg --delete-secret-keys <密钥ID>")])]),t._v(" "),s("li",[t._v("删除公钥："),s("code",[t._v("gpg --delete-keys <密钥ID>")])])])])}),[],!1,null,null,null);a.default=n.exports}}]);